#
# Paru Configuration for CachyOS Development Environment
# ~/.config/paru/paru.conf
#
# See the paru.conf(5) manpage for options
#

#
# GENERAL OPTIONS
#
[options]
PgpFetch
Devel
Provides
DevelSuffixes = -git -cvs -svn -bzr -darcs -always -hg -fossil

# Uncomment to only interact with AUR (skip official repos)
#AurOnly

# Show packages from bottom up (dependencies first)
BottomUp

# Remove make dependencies after install
#RemoveMake

# Loop sudo calls in the background to prevent timeout
#SudoLoop

# Use pacman's --ask flag to automatically confirm package conflicts
#UseAsk

# Save changes to PKGBUILD and install scripts
#SaveChanges

# Upgrade AUR packages and repo packages in the same operation
#CombinedUpgrade

# Clean build directory after install
CleanAfter

# Show a menu to select which packages to upgrade
#UpgradeMenu

# Show Arch news before performing system upgrade
#NewsOnUpgrade

# Use local repo for built packages
#LocalRepo

# IMPORTANT: Use chroot for AUR builds to isolate from mise environment
# This prevents conflicts with mise-managed Python/Node versions
Chroot

# Sign packages
#Sign

# Sign repository database
#SignDb

# Keep cached packages in local repository
#KeepRepoCache

#
# Binary OPTIONS
#
[bin]
# File manager for showing build files
#FileManager = vifm

# Additional makepkg flags
#MFlags = --skippgpcheck

# Sudo command (default: sudo)
#Sudo = doas

# Directory for chroot builds (default: /var/lib/paru/chroot)
#Chrootdir = /var/lib/paru/chroot

# User for running builds in chroot (default: paru)
#BuildUser = paru

#
# NOTES
#
# Chroot builds require devtools to be installed:
#   sudo pacman -S devtools
#
# Initialize chroot environment with:
#   paru --gendb
#
# Chroot builds isolate the build environment from:
#   - mise-managed Python/Node versions
#   - User-installed packages and configurations
#   - System-wide environment variables
#
# This ensures reproducible, clean builds that match
# what would happen in the official Arch build system.
